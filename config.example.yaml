# shutdown-bot 設定 (YAML)

# 停止コマンド（環境に合わせて変更可）
power_off_cmd: "shutdown -p now"   # 例: "systemctl poweroff" でも可

# ノード停止確認の待機設定
node_shutdown_timeout: 600   # 秒
poll_interval: 5             # 秒

# 接続/診断タイムアウト設定（任意）
# 無ければスクリプト内の既定値を使用
timeouts:
  connect: 15         # SSH接続タイムアウト（秒）
  banner: 15          # SSHバナー受信タイムアウト（秒）
  auth: 15            # 認証タイムアウト（秒）
  channel_open: 10    # direct-tcpip チャネル確立のタイムアウト（秒）
  diag_cmd: 8         # 診断コマンド実行タイムアウト（秒）
  nc: 3               # nc の -w 秒数

# triton (ゲート) 設定
gateway:
  host: "triton"
  user: "YOUR_GATEWAY_USER"
  pkey_path: "~/.ssh/id_ed25519"
  port: 22
  needs_sudo_password: false   # triton停止にsudoが必要なら true
  sudo_user: null

# 各workstation（配下にノードを持つ場合と、単体サーバーの両方に対応）
fleets:
  - name: "orion"
    user: "YOUR_WS_USER"
    password: null            # null=起動時にプロンプト / "env:VAR"=環境変数 / 文字列=平文(非推奨) / "file:./my.pass"=ファイルから読み込み
    nodes: ["orion01","orion02","orion03"]
    port: 22
    needs_sudo_password: true

  - name: "virgo"
    user: "YOUR_WS_USER"
    password: "env:ORION_PW" # 環境変数から読み込む
    nodes: ["virgo01","virgo02","virgo03"]
    port: 22
    needs_sudo_password: true

  - name: "spica"             # 単体サーバー例（ノードなし）
    user: "YOUR_WS_USER"
    password: null
    nodes: []
    port: 22
    needs_sudo_password: true

  - name: procyon
    user: "YOUR_WS_USER"
    password: "file:./my.pass" #.passファイルにパスワードを保存して参照させることも可能
    nodes: []
    port: 22
    needs_sudo_password: true
